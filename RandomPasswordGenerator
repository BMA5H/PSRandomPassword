Add-Type -AssemblyName System.Windows.Forms

Add-Type -TypeDefinition @"

using System;

using System.Runtime.InteropServices;

public static class ClipboardHelper

{

    [DllImport("user32.dll")]

    public static extern IntPtr GetClipboardData(uint uFormat);

    [DllImport("user32.dll")]

    public static extern bool IsClipboardFormatAvailable(uint format);

    [DllImport("user32.dll")]

    public static extern bool OpenClipboard(IntPtr hWndNewOwner);

    [DllImport("user32.dll")]

    public static extern bool CloseClipboard();

    [DllImport("kernel32.dll")]

    public static extern IntPtr GlobalLock(IntPtr hMem);

    [DllImport("kernel32.dll")]

    public static extern bool GlobalUnlock(IntPtr hMem);

    [DllImport("kernel32.dll")]

    public static extern int GlobalSize(IntPtr hMem);

    [DllImport("kernel32.dll")]

    public static extern IntPtr GlobalAlloc(uint uFlags, int dwBytes);

    [DllImport("kernel32.dll")]

    public static extern IntPtr GlobalFree(IntPtr hMem);

    [DllImport("user32.dll", SetLastError = true)]

    public static extern bool EmptyClipboard();

    [DllImport("user32.dll", SetLastError = true)]

    public static extern IntPtr SetClipboardData(uint uFormat, IntPtr hData);

}

"@

# Create a form

$form = New-Object System.Windows.Forms.Form

$form.Text = "Random Password Generator"

$form.Size = New-Object System.Drawing.Size(450, 440)

$form.StartPosition = "CenterScreen"

$form.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 12)

# Create a label for password length

$lblLength = New-Object System.Windows.Forms.Label

$lblLength.Text = "Password Length"

$lblLength.Location = New-Object System.Drawing.Point(20, 20)

$lblLength.AutoSize = $true

$lblLength.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 12)

$form.Controls.Add($lblLength)

# Create a numeric up-down control for password length

$lengthUpDown = New-Object System.Windows.Forms.NumericUpDown

$lengthUpDown.Location = New-Object System.Drawing.Point(200, 18)

$lengthUpDown.Size = New-Object System.Drawing.Size(60, 26)

$lengthUpDown.Minimum = 8

$lengthUpDown.Maximum = 32

$lengthUpDown.Value = 12

$form.Controls.Add($lengthUpDown)

# Create a checkbox for lowercase letters

$chkLowercase = New-Object System.Windows.Forms.CheckBox

$chkLowercase.Text = "Include Lowercase Letters"

$chkLowercase.Location = New-Object System.Drawing.Point(20, 60)

$chkLowercase.Checked = $true

$chkLowercase.AutoSize = $true

$chkLowercase.Size = New-Object System.Drawing.Size(240, 25)

$chkLowercase.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 12)

$form.Controls.Add($chkLowercase)

# Create a checkbox for uppercase letters

$chkUppercase = New-Object System.Windows.Forms.CheckBox

$chkUppercase.Text = "Include Uppercase Letters"

$chkUppercase.Location = New-Object System.Drawing.Point(20, 95)

$chkUppercase.Checked = $true

$chkUppercase.AutoSize = $true

$chkUppercase.Size = New-Object System.Drawing.Size(240, 25)

$chkUppercase.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 12)

$form.Controls.Add($chkUppercase)

# Create a checkbox for digits

$chkDigits = New-Object System.Windows.Forms.CheckBox

$chkDigits.Text = "Include Digits"

$chkDigits.Location = New-Object System.Drawing.Point(20, 130)

$chkDigits.Checked = $true

$chkDigits.AutoSize = $true

$chkDigits.Size = New-Object System.Drawing.Size(200, 25)

$chkDigits.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 12)

$form.Controls.Add($chkDigits)

# Create a checkbox for special characters

$chkSpecialChars = New-Object System.Windows.Forms.CheckBox

$chkSpecialChars.Text = "Include Special Characters"

$chkSpecialChars.Location = New-Object System.Drawing.Point(20, 165)

$chkSpecialChars.Checked = $true

$chkSpecialChars.AutoSize = $true

$chkSpecialChars.Size = New-Object System.Drawing.Size(300, 25)

$chkSpecialChars.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 12)

$form.Controls.Add($chkSpecialChars)

# Create a button for generating password

$btnGenerate = New-Object System.Windows.Forms.Button

$btnGenerate.Text = "Generate Password"

$btnGenerate.Location = New-Object System.Drawing.Point(20, 210)

$btnGenerate.Size = New-Object System.Drawing.Size(220, 30)

$btnGenerate.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 12, [System.Drawing.FontStyle]::Bold)

$form.Controls.Add($btnGenerate)

# Create a label for displaying the generated password

$lblPassword = New-Object System.Windows.Forms.Label

$lblPassword.Text = "Generated Password"

$lblPassword.Location = New-Object System.Drawing.Point(20, 260)

$lblPassword.AutoSize = $true

$lblPassword.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 12)

$form.Controls.Add($lblPassword)

# Create a text box for displaying the generated password

$tbPassword = New-Object System.Windows.Forms.TextBox

$tbPassword.ReadOnly = $true

$tbPassword.Location = New-Object System.Drawing.Point(20, 290)

$tbPassword.Size = New-Object System.Drawing.Size(350, 26)

$tbPassword.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 12)

$form.Controls.Add($tbPassword)

# Create a button for copying the password to clipboard

$btnCopy = New-Object System.Windows.Forms.Button

$btnCopy.Text = "Copy to Clipboard"

$btnCopy.Location = New-Object System.Drawing.Point(20, 330)

$btnCopy.Size = New-Object System.Drawing.Size(220, 30)

$btnCopy.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 12, [System.Drawing.FontStyle]::Bold)

$form.Controls.Add($btnCopy)

# Event handler for generating password

$btnGenerate.Add_Click({

    $password = Generate-Password -Length $lengthUpDown.Value `

        -IncludeLowercase $chkLowercase.Checked `

        -IncludeUppercase $chkUppercase.Checked `

        -IncludeDigits $chkDigits.Checked `

        -IncludeSpecialChars $chkSpecialChars.Checked

    $tbPassword.Text = $password

})

# Event handler for copying password to clipboard

$btnCopy.Add_Click({

    $password = $tbPassword.Text

    if (![string]::IsNullOrWhiteSpace($password)) {

        [System.Windows.Forms.Clipboard]::SetText($password)

        [System.Windows.Forms.MessageBox]::Show("Password copied to clipboard.", "Copy Successful", "OK", [System.Windows.Forms.MessageBoxIcon]::Information)

    }

})

# Function to generate a random password

function Generate-Password {

    param (

        [int]$Length = 12,

        [bool]$IncludeLowercase = $true,

        [bool]$IncludeUppercase = $true,

        [bool]$IncludeDigits = $true,

        [bool]$IncludeSpecialChars = $true

    )

    

    $password = ''

    

    $characterSets = @()

    if ($IncludeLowercase) {

        $characterSets += [char[]]"abcdefghijklmnopqrstuvwxyz"

    }

    

    if ($IncludeUppercase) {

        $characterSets += [char[]]"ABCDEFGHIJKLMNOPQRSTUVWXYZ"

    }

    

    if ($IncludeDigits) {

        $characterSets += [char[]]"0123456789"

    }

    

    if ($IncludeSpecialChars) {

        $characterSets += [char[]]'!@#$%^&*()_+=-{}[]|:;"`'',.<>?/'

    }

    

    if ($characterSets.Count -eq 0) {

        $tbPassword.Text = "Please select at least one character set."

        return

    }

    

    for ($i = 0; $i -lt $Length; $i++) {

        $randomCharSet = Get-Random -InputObject $characterSets

        $randomChar = Get-Random -InputObject $randomCharSet

        $password += $randomChar

    }

    

    return $password

}

# Start the form

$form.ShowDialog() | Out-Null
